import paho.mqtt.client as mqtt
import matplotlib.pyplot as plt
import json

# Inicializa listas para armazenar os valores de x e y
x_values = []
y_values = []

# Configura√ß√µes do MQTT
mqtt_broker = "localhost"  # Altere para o IP do broker, se necess√°rio
mqtt_port = 1883
mqtt_topic = "MPU6050"

# Configura o gr√°fico
plt.ion()  # Ativa o modo interativo
fig, ax = plt.subplots()
scatter = ax.scatter([], [], color='red')
ax.set_xlabel('X')
ax.set_ylabel('Y')
ax.set_title('Plotagem Cont√≠nua de Pontos (X, Y)')

# Fun√ß√£o para atualizar os limites do gr√°fico dinamicamente
def update_axes():
    if x_values and y_values:  # S√≥ atualiza se houver dados
        ax.set_xlim(min(x_values) - 1, max(x_values) + 1)
        ax.set_ylim(min(y_values) - 1, max(y_values) + 1)
        ax.relim()
        ax.autoscale_view()

# Fun√ß√£o para atualizar o gr√°fico
def update_plot():
    scatter.set_offsets(list(zip(x_values, y_values)))
    update_axes()
    plt.draw()

# Fun√ß√£o chamada ao receber uma mensagem no t√≥pico MQTT
def on_message(client, userdata, msg):
    try:
        data = json.loads(msg.payload.decode())
        x = float(data.get("x"))
        y = float(data.get("y"))
        print(f"Novo valor recebido - X: {x}, Y: {y}")
        x_values.append(x)
        y_values.append(y)
        update_plot()
    except Exception as e:
        print(f"Erro ao processar a mensagem MQTT: {e}")

# Fun√ß√£o chamada ao conectar ao broker MQTT
def on_connect(client, userdata, flags, rc, properties=None):
    if rc == 0:
        print(f"‚úÖ Conectado ao broker MQTT (C√≥digo {rc})")
        print(f"üì° Inscrito no t√≥pico: {mqtt_topic}")
        client.subscribe(mqtt_topic)
    else:
        print(f"‚ùå Falha na conex√£o. C√≥digo: {rc}")

# Configura√ß√£o do cliente MQTT
client = mqtt.Client()
client.on_connect = on_connect
client.on_message = on_message

# Conecta ao broker MQTT
print("üîÑ Conectando ao broker MQTT...")
client.connect(mqtt_broker, mqtt_port, 60)

# Inicia o loop MQTT em uma thread
client.loop_start()
print("üì° Aguardando dados do MQTT...")

# Atualiza o gr√°fico em um loop n√£o bloqueante
try:
    while True:
        plt.pause(0.1)  # Atualiza o gr√°fico sem bloquear
except KeyboardInterrupt:
    print("Encerrando o script.")
    client.loop_stop()
